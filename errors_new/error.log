[2025-08-16T10:39:31.328Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:39:55.928Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:39:55.962Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:39:56.109Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:39:56.111Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:39:56.111Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:39:56.110Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:39:56.111Z-nmrtkoy5"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:40:41.989Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:40:44.498Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:40:44.549Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:40:46.113Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:40:55.946Z] ERROR: Error: [SchedulerService] Error in job check-time:
Stack: Error: [SchedulerService] Error in job check-time:
    at Object.error (/app/src/events/logger.js:152:27)
    at Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:25:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
Metadata: {}

[2025-08-16T10:40:56.096Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:40:56.097Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:40:56.097Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:40:56.097Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:40:56.097Z-adls2xef"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:41:05.944Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:41:06.765Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:41:07.423Z] ERROR: Error: [DISCORD] ❌ Failed to initialize MetroCore:
Stack: Error: [DISCORD] ❌ Failed to initialize MetroCore:
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:29:16)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:41:08.741Z] ERROR: Error: [DISCORD] ❌ Failed to initialize MetroCore:
Stack: Error: [DISCORD] ❌ Failed to initialize MetroCore:
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:29:16)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:41:16.765Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:41:21.347Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:41:22.281Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:41:22.324Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:41:25.990Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:41:31.347Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:41:42.022Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:41:44.566Z] ERROR: Error: [SchedulerService] Error in job check-time:
Stack: Error: [SchedulerService] Error in job check-time:
    at Object.error (/app/src/events/logger.js:152:27)
    at Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:25:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
Metadata: {}

[2025-08-16T10:41:46.133Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:41:48.496Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:41:49.762Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:41:54.564Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:41:55.947Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:41:56.132Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:41:56.133Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:41:56.133Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:41:56.133Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:41:56.133Z-0lzib6k9"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:42:03.978Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:42:05.358Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:42:05.947Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:42:06.839Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:42:07.184Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:42:16.610Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:42:21.367Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:42:22.296Z] ERROR: Error: [SchedulerService] Error in job check-time:
Stack: Error: [SchedulerService] Error in job check-time:
    at Object.error (/app/src/events/logger.js:152:27)
    at Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:25:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
Metadata: {}

[2025-08-16T10:42:29.685Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:42:30.947Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:42:31.368Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:42:32.294Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:42:42.029Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:42:43.052Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:42:44.569Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:42:45.141Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:42:46.168Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:42:48.379Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:42:54.568Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:42:55.971Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:42:56.167Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:42:56.169Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:42:56.168Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:42:56.168Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:42:56.168Z-es4n1u11"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:43:05.239Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:43:05.971Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:43:06.826Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:43:10.991Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:43:12.180Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:43:16.655Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:43:21.399Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:43:22.295Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:43:26.363Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:43:29.675Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:43:31.399Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:43:31.401Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:43:31.400Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:43:31.400Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:43:31.400Z-g6x4z9uk"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:43:32.294Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:43:42.075Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:43:42.975Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:43:44.607Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:43:46.205Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:43:52.462Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:43:53.393Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:43:54.607Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:43:56.007Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:43:56.204Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:43:56.205Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:43:56.205Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:43:56.205Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:43:56.205Z-pelzwrh3"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:44:05.280Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:44:06.007Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:44:06.874Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:44:07.577Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:44:10.863Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:44:16.740Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:44:21.436Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:44:22.334Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:44:31.437Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:44:31.438Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:44:31.437Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:44:31.437Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:44:31.437Z-boggvmjx"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:44:32.334Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:44:33.708Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:44:34.707Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:44:42.092Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:44:43.006Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:44:44.646Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:44:46.242Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:44:48.789Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:44:52.053Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:44:54.647Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:44:56.013Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:44:56.243Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:44:56.245Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:44:56.244Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:44:56.244Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:44:56.244Z-bwypd8hj"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:45:05.337Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:45:06.008Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:45:06.957Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:45:14.923Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:45:15.890Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:45:16.685Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:45:21.474Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:45:22.373Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:45:30.005Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:45:31.475Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:45:31.476Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:45:31.475Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:45:31.475Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:45:31.475Z-rxawjw5i"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:45:32.373Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:45:33.983Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:45:42.154Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:45:43.037Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:45:44.685Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:45:46.278Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:45:54.684Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:45:56.035Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:45:56.118Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:45:56.278Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:45:56.279Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:45:56.279Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:45:56.279Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:45:56.279Z-79glbaod"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:45:57.073Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:46:05.342Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:46:06.036Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:46:06.038Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:46:06.037Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:46:06.037Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:46:06.037Z-ibelmkej"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:46:06.953Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:46:11.270Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:46:15.183Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:46:16.716Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:46:21.513Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:46:22.412Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:46:31.513Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:46:31.514Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:46:31.513Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:46:31.513Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:46:31.513Z-amatu04h"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:46:32.412Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:46:37.314Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:46:38.271Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:46:42.246Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:46:43.147Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:46:44.722Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:46:46.316Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:46:52.506Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:46:54.722Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:46:54.724Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:46:54.723Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:46:54.723Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:46:54.723Z-e5ozjbw0"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:46:56.073Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:46:56.320Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:46:56.322Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:46:56.321Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:46:56.321Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:46:56.321Z-91c1u09g"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:46:56.377Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:47:05.385Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:47:06.072Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:47:06.073Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:47:06.073Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:47:06.073Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:47:06.073Z-4jkm25kg"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:47:06.989Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:47:16.730Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:47:18.565Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:47:19.665Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:47:37.606Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:47:42.221Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10002ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:47:44.785Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:47:46.372Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:47:54.780Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:47:54.782Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:47:54.781Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:47:54.781Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:47:54.781Z-tjx7mvp1"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:47:56.131Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:47:56.369Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:47:56.372Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:47:56.371Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:47:56.370Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:47:56.371Z-kq8qq5gv"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:47:59.828Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:48:00.917Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:48:05.541Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10007ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:48:06.128Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:48:06.135Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:48:06.134Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:48:06.134Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:48:06.134Z-hey2se75"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:48:07.073Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:48:16.826Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:48:20.088Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:48:20.117Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:48:20.132Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:48:21.590Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:48:31.590Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:48:31.592Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:48:31.591Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:48:31.591Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:48:31.591Z-7shy9yrt"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:48:41.636Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:48:42.290Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:48:42.481Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:48:44.802Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:48:46.393Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:48:54.802Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:48:54.804Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:48:54.803Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:48:54.803Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:48:54.803Z-yv0tlkxq"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:48:56.154Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:48:56.392Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:48:56.393Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:48:56.393Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:48:56.393Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:48:56.393Z-oh9gevaj"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:49:01.425Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:49:01.441Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:49:05.529Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:49:06.154Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:49:06.155Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:49:06.154Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:49:06.154Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:49:06.154Z-wqcxqf80"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:49:07.055Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:49:16.819Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:49:20.108Z] ERROR: Error: [SchedulerService] Error in job check-time:
Stack: Error: [SchedulerService] Error in job check-time:
    at Object.error (/app/src/events/logger.js:152:27)
    at Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:25:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
Metadata: {}

[2025-08-16T10:49:21.624Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:49:22.943Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:49:23.793Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:49:30.107Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:49:31.624Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:49:31.626Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:49:31.625Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:49:31.625Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:49:31.625Z-7ozpigx0"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:49:42.665Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:49:42.689Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:49:44.831Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:49:45.888Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:49:46.432Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:49:47.305Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:49:54.835Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:49:54.838Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:49:54.837Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:49:54.837Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:49:54.837Z-rk9eemux"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:49:56.192Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:49:56.431Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:49:56.433Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:49:56.432Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:49:56.432Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:49:56.432Z-9hwmtjof"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:50:05.510Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:50:06.192Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:50:06.193Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:50:06.193Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:50:06.193Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:50:06.193Z-fldnowty"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:50:07.102Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:50:09.930Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:50:10.810Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:50:16.869Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:50:20.110Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:50:21.656Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:50:23.998Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:50:24.068Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:50:30.110Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:50:31.656Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:50:31.658Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:50:31.657Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:50:31.657Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:50:31.657Z-tpih4eg2"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:50:40.765Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:50:42.323Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:50:44.869Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:50:46.462Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:50:51.264Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:50:52.229Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:50:54.869Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:50:54.870Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:50:54.870Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:50:54.870Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:50:54.870Z-203lyclj"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:50:56.227Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:50:56.462Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:50:56.463Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:50:56.463Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:50:56.463Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:50:56.463Z-jbilbdfm"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:51:05.241Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:51:05.304Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:51:05.548Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:51:06.227Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:51:06.229Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:51:06.228Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:51:06.228Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:51:06.228Z-sm89c6u7"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:51:07.133Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:51:16.902Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:51:20.148Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:51:21.658Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:51:30.147Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:51:31.658Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:51:31.659Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:51:31.659Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:51:31.659Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:51:31.659Z-gf7r1qc5"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:51:32.460Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:51:33.492Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:51:40.811Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:51:42.320Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:51:44.907Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:51:46.475Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:51:46.476Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:51:46.602Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:51:54.907Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:51:54.909Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:51:54.909Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:51:54.909Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:51:54.909Z-3oe8bay9"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:51:56.231Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:51:56.476Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:51:56.477Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:51:56.477Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:51:56.477Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:51:56.477Z-1kjo20ys"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:52:05.607Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:52:06.231Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:52:06.233Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:52:06.232Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:52:06.232Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:52:06.232Z-plbj911u"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:52:07.163Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:52:13.709Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:52:14.753Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:52:16.895Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:52:20.187Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:52:21.696Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:52:27.832Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:52:27.927Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:52:30.187Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:52:31.695Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:52:31.696Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:52:31.696Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:52:31.696Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:52:31.696Z-dirjzp6y"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:52:40.860Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:52:42.371Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:52:44.945Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:52:46.476Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:52:54.945Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:52:54.946Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:52:54.945Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:52:54.945Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:52:54.945Z-kk532a7k"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:52:55.070Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:52:56.185Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:52:56.267Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:52:56.476Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:52:56.477Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:52:56.477Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:52:56.477Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:52:56.477Z-e03tmp3x"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:53:05.603Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:53:06.267Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:53:06.268Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:53:06.268Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:53:06.268Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:53:06.268Z-57bqn76d"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:53:07.152Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:53:09.084Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:53:09.225Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:53:16.939Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:53:20.222Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:53:21.733Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:53:30.222Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:53:31.731Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:53:31.733Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:53:31.732Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:53:31.732Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:53:31.732Z-doyswv9l"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:53:36.742Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:53:37.930Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:53:40.893Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:53:42.405Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:53:44.982Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:53:46.495Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:53:50.436Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:53:50.586Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:53:54.982Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:53:54.983Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:53:54.983Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:53:54.983Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:53:54.983Z-75zjvor4"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:53:56.303Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:53:56.494Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:53:56.496Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:53:56.495Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:53:56.495Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:53:56.495Z-je7uxvyg"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:54:05.643Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:54:06.303Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:54:06.304Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:54:06.304Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:54:06.304Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:54:06.304Z-vw6u451x"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:54:07.156Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:54:16.971Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:54:18.023Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:54:55.035Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:54:55.038Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:54:55.037Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:54:55.037Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:54:55.037Z-ggc7gutw"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:55:45.055Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:55:46.569Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:55:48.024Z] ERROR: Error: [DISCORD] ❌ Failed to initialize MetroCore:
Stack: Error: [DISCORD] ❌ Failed to initialize MetroCore:
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:29:16)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:56:01.411Z] ERROR: Error: [DISCORD] ❌ Failed to initialize MetroCore:
Stack: Error: [DISCORD] ❌ Failed to initialize MetroCore:
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:29:16)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:56:01.996Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:56:17.046Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:56:28.715Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:56:31.807Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:56:31.809Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:56:31.808Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:56:31.808Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:56:31.808Z-3ht826oo"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:56:42.054Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:56:42.475Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:56:43.331Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:56:45.092Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:56:46.589Z] ERROR: Error: [DISCORD] ❌ Failed to initialize MetroCore:
Stack: Error: [DISCORD] ❌ Failed to initialize MetroCore:
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:29:16)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:56:46.603Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:56:55.092Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:56:55.093Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:56:55.093Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:56:55.093Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:56:55.093Z-tseuijdt"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:56:56.411Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:56:56.602Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:56:56.603Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:56:56.603Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:56:56.603Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:56:56.603Z-g69i3hms"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:57:05.772Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:57:05.830Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:57:05.881Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:57:06.410Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:57:06.411Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:57:06.411Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:57:06.411Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:57:06.411Z-r0au87bz"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:57:07.268Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:57:10.224Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:57:15.367Z] ERROR: Error: [SchedulerService] Error in job check-time:
Stack: Error: [SchedulerService] Error in job check-time:
    at Object.error (/app/src/events/logger.js:152:27)
    at Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:25:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
Metadata: {}

[2025-08-16T10:57:17.088Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:57:21.843Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:57:23.322Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:57:24.609Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:57:25.365Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:57:27.290Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:57:31.843Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:57:31.844Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:57:31.844Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:57:31.844Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:57:31.844Z-eeyemya5"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:57:36.090Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:57:42.501Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:57:45.115Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:57:46.638Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:57:47.108Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:57:51.400Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:57:55.115Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:57:55.117Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:57:55.116Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:57:55.116Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:57:55.116Z-p0civ5is"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:57:56.446Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:57:56.637Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:57:56.638Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:57:56.638Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:57:56.638Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:57:56.638Z-d8w9t250"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:58:05.035Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:58:05.792Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:58:05.895Z] ERROR: Error: [SchedulerService] Error in job check-time:
Stack: Error: [SchedulerService] Error in job check-time:
    at Object.error (/app/src/events/logger.js:152:27)
    at Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:25:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
Metadata: {}

[2025-08-16T10:58:06.047Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:58:06.446Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:58:06.447Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:58:06.447Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:58:06.447Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:58:06.447Z-hppob7li"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:58:07.304Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:58:09.722Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:58:15.367Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:58:15.894Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:58:17.115Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:58:21.863Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:58:25.363Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:58:26.618Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:58:28.919Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:58:31.862Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:58:31.863Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:58:31.863Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:58:31.863Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:58:31.863Z-u9e12mh3"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:58:32.659Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:58:36.034Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:58:42.529Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:58:45.135Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:58:46.266Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:58:46.673Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:58:47.243Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:58:51.544Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:58:55.134Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:58:55.135Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:58:55.135Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:58:55.135Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:58:55.135Z-7isclwht"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:58:56.468Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:58:56.672Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:58:56.674Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:58:56.674Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:58:56.674Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:58:56.674Z-1q84jpw8"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:59:05.811Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:59:05.895Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:59:06.467Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:59:06.468Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:59:06.468Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:59:06.468Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:59:06.468Z-jng4zg4n"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:59:07.343Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:59:10.125Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:59:13.861Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:59:15.401Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:59:15.894Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:59:17.146Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:59:21.894Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:59:25.401Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:59:26.566Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:59:27.458Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:59:28.497Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:59:31.894Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:59:31.895Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:59:31.895Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:59:31.895Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:59:31.895Z-ryljfdwd"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:59:32.939Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:59:36.063Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:59:42.565Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T10:59:45.171Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:59:46.703Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:59:51.329Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:59:55.032Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T10:59:55.170Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:59:55.171Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:59:55.171Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:59:55.171Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:59:55.171Z-ykkmkior"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T10:59:56.505Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:59:56.702Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T10:59:56.703Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T10:59:56.703Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T10:59:56.703Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T10:59:56.703Z-ei9ijcr8"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:00:05.830Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:00:05.933Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:00:06.505Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:00:06.506Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:00:06.506Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:00:06.506Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:00:06.506Z-4556b8rv"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:00:07.370Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:00:08.705Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:00:09.938Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:00:14.223Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:00:15.421Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:00:15.933Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:00:17.186Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:00:21.930Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:00:25.421Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:00:26.602Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:00:31.929Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:00:31.930Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:00:31.930Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:00:31.930Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:00:31.930Z-2cpzfmdp"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:00:32.536Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:00:36.086Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:00:36.194Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:00:42.601Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:00:45.206Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:00:46.737Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:00:49.954Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:00:51.195Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:00:55.206Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:00:55.207Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:00:55.206Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:00:55.206Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:00:55.206Z-kh7ma5vy"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:00:55.425Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:00:56.531Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:00:56.736Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:00:56.738Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:00:56.737Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:00:56.737Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:00:56.737Z-zzp6gjz5"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:01:05.877Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:01:05.947Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:01:06.531Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:01:06.532Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:01:06.531Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:01:06.531Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:01:06.531Z-ivz5feue"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:01:07.410Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:01:13.711Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:01:15.446Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:01:15.946Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:01:17.206Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:01:17.502Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:01:21.966Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:01:25.446Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:01:26.616Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:01:31.122Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:01:31.964Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:01:31.965Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:01:31.964Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:01:31.964Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:01:31.964Z-srf06slp"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:01:32.402Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:01:36.128Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:01:36.596Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:01:42.639Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:01:45.241Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:01:46.771Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:01:54.978Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:01:55.241Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:01:55.242Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:01:55.242Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:01:55.242Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:01:55.242Z-ov2lcmv7"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:01:56.567Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:01:56.772Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:01:56.774Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:01:56.773Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:01:56.773Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:01:56.773Z-93bb7efk"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:01:58.765Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:02:05.950Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:02:05.976Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:02:06.566Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:02:06.567Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:02:06.567Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:02:06.567Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:02:06.567Z-t9a404by"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:02:07.449Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:02:12.356Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:02:13.606Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:02:15.482Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:02:15.976Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:02:17.226Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:02:17.950Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:02:21.994Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:02:25.482Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:02:25.484Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:02:25.483Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:02:25.483Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:02:25.483Z-tezxdbih"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:02:26.654Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:02:31.994Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:02:31.995Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:02:31.995Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:02:31.995Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:02:31.995Z-kbr8eepi"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:02:36.160Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10001ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:02:36.187Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:02:40.038Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:02:42.657Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:02:45.247Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:02:46.804Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:02:53.574Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:02:54.835Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:02:55.247Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:02:55.248Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:02:55.248Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:02:55.248Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:02:55.248Z-o6h84nr2"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:02:56.600Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:02:56.804Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:02:56.805Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:02:56.805Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:02:56.805Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:02:56.805Z-6juc7i44"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:02:59.168Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:238:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:168:13
    at async initialize (/app/src/core/bootstrap.js:26:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T11:03:42.738Z] ERROR: Error: [ApiService] Fetch failed
Stack: Error: [ApiService] Fetch failed
    at Object.error (/app/src/events/logger.js:152:27)
    at ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:501:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": {
    "name": "SqlError",
    "sqlMessage": "pool timeout: failed to retrieve a connection from pool after 10000ms\n    (pool connections: active=0 idle=0 limit=5)",
    "sql": null,
    "fatal": false,
    "errno": 45028,
    "sqlState": "HY000",
    "code": "ER_GET_CONNECTION_TIMEOUT"
  }
}

[2025-08-16T11:03:55.345Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:377:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:03:55.347Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:03:55.346Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:03:55.346Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:03:55.346Z-dzx6v1q9"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:03:56.643Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:03:56.834Z] ERROR: Error: [MetroCore] Static data refresh failed:
Stack: Error: [MetroCore] Static data refresh failed:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:378:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T11:03:56.836Z] ERROR: Error: [MetroCore] Failed to emit undefined
Stack: Error: [MetroCore] Failed to emit undefined
    at Object.error (/app/src/events/logger.js:152:27)
    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:133:20)
    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)
    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)
    at MetroCore.emit (node:events:518:28)
    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)
    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)
    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)
Metadata: {
  "error": "Event undefined not registered",
  "stack": "Error: Event undefined not registered\n    at EventEngine.safeEmit (/app/src/core/metro/core/internal/EventEngine.js:114:23)\n    at StatusEngine.enterSafeMode (/app/src/core/metro/core/internal/StatusEngine.js:27:20)\n    at MetroCore.<anonymous> (/app/src/core/metro/core/internal/EventEngine.js:57:24)\n    at MetroCore.emit (node:events:518:28)\n    at EventEngine.emitError (/app/src/core/metro/core/internal/EventEngine.js:157:20)\n    at MetroCore.refreshStaticData (/app/src/core/metro/core/MetroCore.js:379:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ApiService._ensureStaticDataFreshness (/app/src/core/metro/core/services/ApiService.js:534:31)\n    at async ApiService.fetchNetworkStatus (/app/src/core/metro/core/services/ApiService.js:439:9)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)",
  "originalData": {
    "timestamp": "2025-08-16T11:03:56.835Z",
    "data": {
      "reason": "Excessive errors",
      "timestamp": "2025-08-16T11:03:56.835Z",
      "systemState": {
        "version": "0.0.0",
        "network": {
          "status": "initializing"
        },
        "lines": [],
        "lastUpdated": "1970-01-01T00:00:00.000Z"
      }
    },
    "metadata": {
      "source": "unknown",
      "severity": "critical",
      "eventId": "2025-08-16T11:03:56.835Z-3yjpthh0"
    },
    "errors": [],
    "_validator": {
      "schemas": {
        "time:day_type_change": {
          "required": [
            "dayType",
            "nextTransition"
          ],
          "dayType": {
            "type": "string",
            "enum": [
              "weekday",
              "saturday",
              "sunday",
              "festive"
            ]
          },
          "nextTransition": {
            "type": {
              "type": "string"
            },
            "required": [
              "time",
              "type"
            ],
            "time": {
              "type": "string",
              "pattern": {}
            }
          }
        },
        "schedule:service_transition": {
          "required": [
            "type",
            "opening",
            "closing"
          ],
          "type": {
            "type": "string",
            "enum": [
              "normal",
              "extended",
              "special"
            ]
          },
          "opening": {
            "type": "string",
            "pattern": {}
          },
          "closing": {
            "type": "string",
            "pattern": {}
          },
          "eventName": {
            "type": "string",
            "optional": true
          }
        },
        "undefined": {
          "required": [
            "query",
            "duration"
          ],
          "query": {
            "type": "string",
            "minLength": 1
          },
          "duration": {
            "type": "number",
            "min": 0
          },
          "rows": {
            "type": "number",
            "optional": true
          }
        },
        "schedule:fare_period_change": {
          "required": [
            "periodType",
            "name"
          ],
          "periodType": {
            "type": "string",
            "enum": [
              "morning_peak",
              "evening_peak",
              "off_peak",
              "night"
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "system:ready": {
          "required": [
            "version",
            "startupTime"
          ],
          "version": {
            "type": "string",
            "pattern": {}
          },
          "startupTime": {
            "type": "number",
            "min": 0
          }
        },
        "system:fatal_error": {
          "required": [
            "error",
            "component"
          ],
          "error": {
            "type": "object",
            "required": [
              "message",
              "stack"
            ],
            "message": {
              "type": "string",
              "minLength": 1
            },
            "stack": {
              "type": "string"
            }
          },
          "component": {
            "type": "string",
            "enum": [
              "core",
              "api",
              "db",
              "scheduler"
            ]
          }
        },
        "data:updated": {
          "required": [
            "version",
            "stations",
            "lines",
            "network"
          ],
          "version": {
            "type": "string",
            "minLength": 10
          },
          "stations": {
            "type": "object"
          },
          "lines": {
            "type": "object"
          },
          "network": {
            "type": "object",
            "required": [
              "status",
              "lastUpdated"
            ],
            "status": {
              "type": "string",
              "enum": [
                "operational",
                "degraded",
                "outage"
              ]
            }
          }
        },
        "poll:success": {
          "required": [
            "duration",
            "dataVersion"
          ],
          "duration": {
            "type": "number",
            "min": 0,
            "max": 30000
          },
          "dataVersion": {
            "type": "string"
          },
          "requestId": {
            "type": "number",
            "optional": true
          }
        },
        "poll:failure": {
          "required": [
            "error",
            "consecutiveFailures"
          ],
          "error": {
            "type": "object",
            "required": [
              "message"
            ]
          },
          "consecutiveFailures": {
            "type": "number",
            "min": 1
          },
          "retryIn": {
            "type": "number",
            "min": 1000
          }
        },
        "embed:generated": {
          "required": [
            "success",
            "generationTime"
          ],
          "success": {
            "type": "boolean"
          },
          "generationTime": {
            "type": "number",
            "min": 0
          },
          "embedStats": {
            "type": "object",
            "optional": true,
            "fields": {
              "type": "number",
              "min": 1
            },
            "linesTracked": {
              "type": "number",
              "min": 0
            }
          },
          "error": {
            "type": "object",
            "optional": true,
            "required": [
              "message"
            ]
          }
        },
        "entity:line_status_changed": {
          "required": [
            "lineId",
            "from",
            "to"
          ],
          "lineId": {
            "type": "string",
            "pattern": {}
          },
          "from": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "to": {
            "type": "string",
            "enum": [
              "operational",
              "delayed",
              "suspended"
            ]
          },
          "affectedStations": {
            "type": "number",
            "min": 0,
            "optional": true
          }
        },
        "entity:not_found": {
          "required": [
            "entityType",
            "entityId"
          ],
          "entityType": {
            "type": "string",
            "enum": [
              "station",
              "line"
            ]
          },
          "entityId": {
            "type": "string",
            "minLength": 1
          }
        },
        "change:detected": {
          "required": [
            "changes",
            "metadata"
          ],
          "changes": {
            "type": "array"
          },
          "metadata": {
            "required": [
              "severity"
            ],
            "severity": {
              "type": "string",
              "enum": [
                "critical",
                "high",
                "medium",
                "low",
                "none"
              ]
            },
            "groupedStations": {
              "type": "array",
              "optional": true
            }
          }
        }
      },
      "validators": {}
    }
  }
}

[2025-08-16T11:07:22.167Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}
[2025-08-16T12:31:06.895Z] ERROR: Error: [StatusProcessor] Database update failed
Stack: Error: [StatusProcessor] Database update failed
    at Object.error (/app/src/events/logger.js:152:27)
    at StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:220:14)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)
    at async MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:230:13)
    at async /app/src/core/metro/core/MetroCore.js:170:13
    at async initialize (/app/src/core/bootstrap.js:19:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": "(intermediate value) is not iterable",
  "stack": "TypeError: (intermediate value) is not iterable\n    at /app/src/core/status/utils/StatusProcessor.js:164:30\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DatabaseManager.transaction (/app/src/core/database/DatabaseManager.js:204:28)\n    at async StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:89:7)\n    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)\n    at async MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:230:13)\n    at async /app/src/core/metro/core/MetroCore.js:170:13\n    at async initialize (/app/src/core/bootstrap.js:19:21)\n    at async startDiscordBot (/app/src/discord-bot.js:22:27)"
}

[2025-08-16T12:31:06.940Z] ERROR: Error: [StatusProcessor] Database update failed
Stack: Error: [StatusProcessor] Database update failed
    at Object.error (/app/src/events/logger.js:152:27)
    at StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:220:14)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)
    at async MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:230:13)
    at async /app/src/core/metro/core/MetroCore.js:170:13
    at async initialize (/app/src/core/bootstrap.js:19:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": "(intermediate value) is not iterable",
  "stack": "TypeError: (intermediate value) is not iterable\n    at /app/src/core/status/utils/StatusProcessor.js:164:30\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DatabaseManager.transaction (/app/src/core/database/DatabaseManager.js:204:28)\n    at async StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:89:7)\n    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)\n    at async MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:230:13)\n    at async /app/src/core/metro/core/MetroCore.js:170:13\n    at async initialize (/app/src/core/bootstrap.js:19:21)\n    at async startScheduler (/app/src/scheduler.js:7:27)"
}

[2025-08-16T12:31:08.040Z] ERROR: Error: [MetroCore] Failed to initialize scheduling system:
Stack: Error: [MetroCore] Failed to initialize scheduling system:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore._initializeSchedulingSystem (/app/src/core/metro/core/MetroCore.js:310:20)
    at MetroCore.setClient (/app/src/core/metro/core/MetroCore.js:320:24)
    at startDiscordBot (/app/src/discord-bot.js:71:25)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
Metadata: {
  "error": {
    "code": "MODULE_NOT_FOUND",
    "requireStack": [
      "/app/src/core/chronos/managers/ScheduleManager.js",
      "/app/src/core/metro/core/internal/ScheduleEngine.js",
      "/app/src/core/metro/core/MetroCore.js",
      "/app/src/core/bootstrap.js",
      "/app/src/discord-bot.js"
    ]
  }
}

[2025-08-16T12:32:06.949Z] ERROR: Error: [SchedulerService] Error in job check-time:
Stack: Error: [SchedulerService] Error in job check-time:
    at Object.error (/app/src/events/logger.js:152:27)
    at Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:25:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
Metadata: {}

[2025-08-16T12:32:07.936Z] ERROR: Error: [StatusProcessor] Database update failed
Stack: Error: [StatusProcessor] Database update failed
    at Object.error (/app/src/events/logger.js:152:27)
    at StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:220:14)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": "(intermediate value) is not iterable",
  "stack": "TypeError: (intermediate value) is not iterable\n    at /app/src/core/status/utils/StatusProcessor.js:164:30\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DatabaseManager.transaction (/app/src/core/database/DatabaseManager.js:204:28)\n    at async StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:89:7)\n    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)"
}

[2025-08-16T12:33:06.949Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T12:33:07.683Z] ERROR: Error: [StatusProcessor] Database update failed
Stack: Error: [StatusProcessor] Database update failed
    at Object.error (/app/src/events/logger.js:152:27)
    at StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:220:14)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": "(intermediate value) is not iterable",
  "stack": "TypeError: (intermediate value) is not iterable\n    at /app/src/core/status/utils/StatusProcessor.js:164:30\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DatabaseManager.transaction (/app/src/core/database/DatabaseManager.js:204:28)\n    at async StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:89:7)\n    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)"
}

[2025-08-16T12:34:06.949Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T12:34:07.658Z] ERROR: Error: [StatusProcessor] Database update failed
Stack: Error: [StatusProcessor] Database update failed
    at Object.error (/app/src/events/logger.js:152:27)
    at StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:220:14)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": "(intermediate value) is not iterable",
  "stack": "TypeError: (intermediate value) is not iterable\n    at /app/src/core/status/utils/StatusProcessor.js:164:30\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DatabaseManager.transaction (/app/src/core/database/DatabaseManager.js:204:28)\n    at async StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:89:7)\n    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)"
}

[2025-08-16T12:35:06.949Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T12:35:07.649Z] ERROR: Error: [StatusProcessor] Database update failed
Stack: Error: [StatusProcessor] Database update failed
    at Object.error (/app/src/events/logger.js:152:27)
    at StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:220:14)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": "(intermediate value) is not iterable",
  "stack": "TypeError: (intermediate value) is not iterable\n    at /app/src/core/status/utils/StatusProcessor.js:164:30\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DatabaseManager.transaction (/app/src/core/database/DatabaseManager.js:204:28)\n    at async StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:89:7)\n    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)"
}

[2025-08-16T12:36:06.949Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T12:36:07.669Z] ERROR: Error: [StatusProcessor] Database update failed
Stack: Error: [StatusProcessor] Database update failed
    at Object.error (/app/src/events/logger.js:152:27)
    at StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:220:14)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": "(intermediate value) is not iterable",
  "stack": "TypeError: (intermediate value) is not iterable\n    at /app/src/core/status/utils/StatusProcessor.js:164:30\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DatabaseManager.transaction (/app/src/core/database/DatabaseManager.js:204:28)\n    at async StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:89:7)\n    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)"
}

[2025-08-16T12:37:06.950Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T12:37:07.698Z] ERROR: Error: [StatusProcessor] Database update failed
Stack: Error: [StatusProcessor] Database update failed
    at Object.error (/app/src/events/logger.js:152:27)
    at StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:220:14)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": "(intermediate value) is not iterable",
  "stack": "TypeError: (intermediate value) is not iterable\n    at /app/src/core/status/utils/StatusProcessor.js:164:30\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DatabaseManager.transaction (/app/src/core/database/DatabaseManager.js:204:28)\n    at async StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:89:7)\n    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)"
}

[2025-08-16T12:39:02.231Z] ERROR: Error: [SchedulerService] Error in job check-time:
Stack: Error: [SchedulerService] Error in job check-time:
    at Object.error (/app/src/events/logger.js:152:27)
    at Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:25:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
Metadata: {}

[2025-08-16T12:39:02.986Z] ERROR: Error: [StatusProcessor] Database update failed
Stack: Error: [StatusProcessor] Database update failed
    at Object.error (/app/src/events/logger.js:152:27)
    at StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:220:14)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {
  "error": "(intermediate value) is not iterable",
  "stack": "TypeError: (intermediate value) is not iterable\n    at /app/src/core/status/utils/StatusProcessor.js:164:30\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DatabaseManager.transaction (/app/src/core/database/DatabaseManager.js:204:28)\n    at async StatusProcessor._updateDatabase (/app/src/core/status/utils/StatusProcessor.js:89:7)\n    at async StatusProcessor.processRawAPIData (/app/src/core/status/utils/StatusProcessor.js:69:7)\n    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)"
}
[2025-08-16T14:12:21.720Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:14:21.832Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:15:50.768Z] ERROR: Error: [SchedulerService] Error in job check-time:
Stack: Error: [SchedulerService] Error in job check-time:
    at Object.error (/app/src/events/logger.js:152:27)
    at Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:25:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
Metadata: {}

[2025-08-16T14:19:47.807Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:20:21.976Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:20:47.809Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:20:50.874Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:21:21.977Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:21:47.821Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:21:50.906Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:22:22.006Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:22:47.852Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:22:50.933Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:23:22.038Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:23:47.884Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:23:50.964Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:24:22.069Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:24:47.917Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:24:50.993Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:25:22.100Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:25:47.947Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:25:51.023Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:33:03.883Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T14:33:37.997Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}
[2025-08-16T16:09:33.975Z] ERROR: Error: [SchedulerService] Error in job check-time:
Stack: Error: [SchedulerService] Error in job check-time:
    at Object.error (/app/src/events/logger.js:152:27)
    at Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:25:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
Metadata: {}

[2025-08-16T16:11:25.338Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T16:12:25.376Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}

[2025-08-16T16:13:07.276Z] ERROR: Error: [TimeService] Error checking for events:
Stack: Error: [TimeService] Error checking for events:
    at Object.error (/app/src/events/logger.js:152:27)
    at TimeService.checkEvents (/app/src/core/chronos/TimeService.js:99:25)
    at TimeService.checkTime (/app/src/core/chronos/TimeService.js:28:20)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at runNextTicks (node:internal/process/task_queues:69:3)
    at listOnTimeout (node:internal/timers:549:9)
    at process.processTimers (node:internal/timers:523:7)
    at async Timeout._onTimeout (/app/src/core/chronos/SchedulerService.js:23:21)
Metadata: {}
[2025-08-16T17:18:09.596Z] ERROR: Error: [SCHEDULER] ❌ Database configuration not found. Please set environment variables or create a config.json file.
Stack: Error: [SCHEDULER] ❌ Database configuration not found. Please set environment variables or create a config.json file.
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:31:20)
    at startScheduler (/app/src/scheduler.js:7:33)
    at Object.<anonymous> (/app/src/scheduler.js:46:1)
    at Module._compile (node:internal/modules/cjs/loader:1730:14)
    at Object..js (node:internal/modules/cjs/loader:1895:10)
    at Module.load (node:internal/modules/cjs/loader:1465:32)
    at Function._load (node:internal/modules/cjs/loader:1282:12)
    at TracingChannel.traceSync (node:diagnostics_channel:322:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)
Metadata: {}

[2025-08-16T17:18:09.600Z] ERROR: Error: [DISCORD] ❌ Database configuration not found. Please set environment variables or create a config.json file.
Stack: Error: [DISCORD] ❌ Database configuration not found. Please set environment variables or create a config.json file.
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:31:20)
    at startDiscordBot (/app/src/discord-bot.js:22:33)
    at Object.<anonymous> (/app/src/discord-bot.js:115:1)
    at Module._compile (node:internal/modules/cjs/loader:1730:14)
    at Object..js (node:internal/modules/cjs/loader:1895:10)
    at Module.load (node:internal/modules/cjs/loader:1465:32)
    at Function._load (node:internal/modules/cjs/loader:1282:12)
    at TracingChannel.traceSync (node:diagnostics_channel:322:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)
Metadata: {}

[2025-08-16T17:18:17.560Z] ERROR: Error: [SCHEDULER] ❌ Database configuration not found. Please set environment variables or create a config.json file.
Stack: Error: [SCHEDULER] ❌ Database configuration not found. Please set environment variables or create a config.json file.
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:31:20)
    at startScheduler (/app/src/scheduler.js:7:33)
    at Object.<anonymous> (/app/src/scheduler.js:46:1)
    at Module._compile (node:internal/modules/cjs/loader:1730:14)
    at Object..js (node:internal/modules/cjs/loader:1895:10)
    at Module.load (node:internal/modules/cjs/loader:1465:32)
    at Function._load (node:internal/modules/cjs/loader:1282:12)
    at TracingChannel.traceSync (node:diagnostics_channel:322:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)
Metadata: {}

[2025-08-16T17:18:17.584Z] ERROR: Error: [DISCORD] ❌ Database configuration not found. Please set environment variables or create a config.json file.
Stack: Error: [DISCORD] ❌ Database configuration not found. Please set environment variables or create a config.json file.
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:31:20)
    at startDiscordBot (/app/src/discord-bot.js:22:33)
    at Object.<anonymous> (/app/src/discord-bot.js:115:1)
    at Module._compile (node:internal/modules/cjs/loader:1730:14)
    at Object..js (node:internal/modules/cjs/loader:1895:10)
    at Module.load (node:internal/modules/cjs/loader:1465:32)
    at Function._load (node:internal/modules/cjs/loader:1282:12)
    at TracingChannel.traceSync (node:diagnostics_channel:322:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)
Metadata: {}

[2025-08-16T17:18:18.140Z] ERROR: Error: [SCHEDULER] ❌ Database configuration not found. Please set environment variables or create a config.json file.
Stack: Error: [SCHEDULER] ❌ Database configuration not found. Please set environment variables or create a config.json file.
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:31:20)
    at startScheduler (/app/src/scheduler.js:7:33)
    at Object.<anonymous> (/app/src/scheduler.js:46:1)
    at Module._compile (node:internal/modules/cjs/loader:1730:14)
    at Object..js (node:internal/modules/cjs/loader:1895:10)
    at Module.load (node:internal/modules/cjs/loader:1465:32)
    at Function._load (node:internal/modules/cjs/loader:1282:12)
    at TracingChannel.traceSync (node:diagnostics_channel:322:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)
Metadata: {}

[2025-08-16T17:18:18.171Z] ERROR: Error: [DISCORD] ❌ Database configuration not found. Please set environment variables or create a config.json file.
Stack: Error: [DISCORD] ❌ Database configuration not found. Please set environment variables or create a config.json file.
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:31:20)
    at startDiscordBot (/app/src/discord-bot.js:22:33)
    at Object.<anonymous> (/app/src/discord-bot.js:115:1)
    at Module._compile (node:internal/modules/cjs/loader:1730:14)
    at Object..js (node:internal/modules/cjs/loader:1895:10)
    at Module.load (node:internal/modules/cjs/loader:1465:32)
    at Function._load (node:internal/modules/cjs/loader:1282:12)
    at TracingChannel.traceSync (node:diagnostics_channel:322:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)
Metadata: {}

[2025-08-16T17:18:26.591Z] ERROR: Error: [SCHEDULER] ❌ Database configuration not found. Please set environment variables or create a config.json file.
Stack: Error: [SCHEDULER] ❌ Database configuration not found. Please set environment variables or create a config.json file.
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:31:20)
    at startScheduler (/app/src/scheduler.js:7:33)
    at Object.<anonymous> (/app/src/scheduler.js:46:1)
    at Module._compile (node:internal/modules/cjs/loader:1730:14)
    at Object..js (node:internal/modules/cjs/loader:1895:10)
    at Module.load (node:internal/modules/cjs/loader:1465:32)
    at Function._load (node:internal/modules/cjs/loader:1282:12)
    at TracingChannel.traceSync (node:diagnostics_channel:322:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)
Metadata: {}

[2025-08-16T17:18:26.601Z] ERROR: Error: [DISCORD] ❌ Database configuration not found. Please set environment variables or create a config.json file.
Stack: Error: [DISCORD] ❌ Database configuration not found. Please set environment variables or create a config.json file.
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:31:20)
    at startDiscordBot (/app/src/discord-bot.js:22:33)
    at Object.<anonymous> (/app/src/discord-bot.js:115:1)
    at Module._compile (node:internal/modules/cjs/loader:1730:14)
    at Object..js (node:internal/modules/cjs/loader:1895:10)
    at Module.load (node:internal/modules/cjs/loader:1465:32)
    at Function._load (node:internal/modules/cjs/loader:1282:12)
    at TracingChannel.traceSync (node:diagnostics_channel:322:14)
    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)
Metadata: {}
[2025-08-16T18:07:54.289Z] ERROR: Error: [Master] Critical error during startup:
Stack: Error: [Master] Critical error during startup:
    at Object.error (/app/src/events/logger.js:152:27)
    at /app/src/index.js:148:12
Metadata: {}

[2025-08-16T18:09:03.476Z] ERROR: Error: [Master] Critical error during startup:
Stack: Error: [Master] Critical error during startup:
    at Object.error (/app/src/events/logger.js:152:27)
    at /app/src/index.js:148:12
Metadata: {}

[2025-08-16T18:09:58.339Z] ERROR: Error: [Master] Critical error during startup:
Stack: Error: [Master] Critical error during startup:
    at Object.error (/app/src/events/logger.js:152:27)
    at /app/src/index.js:148:12
Metadata: {}

[2025-08-16T18:14:14.350Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:14.437Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:15.223Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:16.240Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:16.989Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:18.054Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:19.090Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:19.891Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:20.677Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:21.385Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:22.133Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:22.841Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:23.614Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:24.260Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:25.175Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:25.906Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:26.624Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:27.314Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:28.022Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:28.802Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:29.463Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:30.140Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:30.798Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:31.509Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:32.672Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:33.993Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:35.364Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:36.682Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:37.777Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:38.570Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:39.302Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:40.213Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:40.974Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:41.641Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:42.330Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:43.098Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:43.785Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:44.482Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:45.195Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:46.077Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:46.872Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:47.666Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:48.490Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:49.212Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:49.961Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:50.683Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:51.438Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:52.192Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:53.001Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:53.762Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:54.496Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:55.261Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:55.940Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:56.666Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:57.425Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:58.211Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:58.918Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:14:59.604Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:00.304Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:00.974Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:01.649Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:02.318Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:02.980Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:03.687Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:04.370Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:05.063Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:05.721Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:06.418Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:07.141Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:07.841Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:08.628Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:09.362Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:10.081Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:10.802Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:11.517Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:12.217Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:12.961Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:13.647Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:14.368Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:15.076Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:15.750Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:16.365Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:17.085Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:17.793Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:18.486Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:19.191Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:19.854Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:20.515Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:21.194Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:21.912Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:22.652Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:23.512Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:24.229Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:24.892Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:25.628Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:26.356Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:27.053Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:27.734Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:28.492Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:29.112Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:29.741Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:30.403Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:31.075Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:31.699Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:32.390Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:33.034Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:33.673Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:34.348Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:35.066Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:35.711Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:36.395Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:37.059Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:37.781Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:38.463Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:39.139Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:39.822Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:40.465Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:41.136Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:41.814Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:42.521Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:43.222Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:43.910Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:44.636Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:45.336Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:46.046Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:46.746Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:47.447Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:48.233Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:48.914Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:49.602Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:50.291Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:51.006Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:51.684Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:52.453Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:53.121Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:53.788Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:54.464Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:55.132Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:55.788Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:56.495Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:57.290Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:58.034Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:58.792Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:15:59.454Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:00.133Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:00.896Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:01.610Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:02.298Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:02.999Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:03.679Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:04.348Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:05.095Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:05.807Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:06.599Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:07.297Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:08.033Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:08.790Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:09.428Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:10.164Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:10.875Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:11.517Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:12.235Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:12.903Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:13.593Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:14.285Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:15.015Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:15.714Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:16.554Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:17.223Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:17.941Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:18.732Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:19.485Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:20.191Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:20.978Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:21.668Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:22.353Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:23.067Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:23.813Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:24.521Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:25.218Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:25.915Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:26.584Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:27.297Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:28.003Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:28.693Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:29.404Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:30.072Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:30.760Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:31.431Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:32.145Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:32.829Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:33.543Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:34.224Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:34.907Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:35.591Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:36.264Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:36.939Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:37.610Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:38.358Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:39.040Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:39.729Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:40.389Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:41.056Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:41.720Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:42.481Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:43.208Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:43.911Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:44.584Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:45.315Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:46.117Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:46.792Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:47.499Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:48.223Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:49.038Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:49.779Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:50.575Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:51.319Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:52.081Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:52.850Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:53.517Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:54.193Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:54.818Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:55.445Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:56.095Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:56.804Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:57.519Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:58.268Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:58.974Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:16:59.626Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:00.287Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:00.944Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:01.590Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:02.296Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:02.961Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:03.623Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:04.326Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:05.025Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:05.648Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:06.353Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:07.037Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:07.809Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:08.557Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:09.271Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:10.047Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:10.830Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:11.595Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:12.369Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:13.074Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:13.836Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:14.549Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:15.362Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:16.094Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:16.833Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:17.589Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:18.412Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:19.184Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:19.900Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:20.614Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:21.339Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:22.014Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:22.706Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:23.380Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:24.015Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:24.847Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:25.494Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:26.140Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:26.808Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:27.500Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:28.186Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:28.826Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:29.506Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:30.130Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:30.798Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:31.447Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:32.104Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:32.739Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:33.377Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:34.035Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:34.680Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:35.364Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:36.001Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:36.653Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:37.338Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:38.046Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:38.731Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:39.372Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:39.989Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:40.630Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:41.261Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:41.876Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:42.529Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:43.192Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:43.823Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:44.471Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:45.144Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:45.775Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:46.431Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:47.113Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:47.856Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:48.604Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:49.360Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:50.069Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:50.797Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:51.414Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:52.094Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:52.755Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:53.415Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:54.063Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:54.723Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:55.413Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:56.040Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:56.730Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:57.376Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:58.037Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:58.676Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:59.318Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:17:59.941Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:00.587Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:01.228Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:01.833Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:02.467Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:03.094Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:03.715Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:04.316Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:04.960Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:05.569Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:06.191Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:06.810Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:07.443Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:08.080Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:08.711Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:09.308Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:09.942Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:10.643Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:11.381Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:12.068Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:12.746Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:13.438Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:14.058Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:14.682Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:15.353Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:16.024Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:16.680Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:17.395Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:18.109Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:18.839Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:19.523Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:20.186Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:20.884Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:21.517Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:22.162Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:22.823Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:23.532Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:24.160Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:24.826Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:25.471Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:26.147Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:26.808Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:27.486Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:28.198Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:28.864Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:29.490Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:30.098Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:30.741Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:31.392Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:32.072Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:32.724Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:33.370Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:34.025Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:34.697Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:35.383Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:36.022Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:36.698Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:37.354Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:38.399Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:39.694Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:41.055Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:42.405Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:43.177Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:43.855Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:44.591Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:45.375Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:46.059Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:46.872Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:47.694Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:48.478Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:49.254Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:50.102Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:50.836Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:51.521Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:52.251Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:52.969Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:53.643Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:54.377Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:55.159Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:55.996Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:56.961Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:57.830Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:58.700Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:18:59.425Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:00.178Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:00.947Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:01.854Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:02.615Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:03.367Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:04.088Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:04.771Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:05.481Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:06.125Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:06.919Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:07.671Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:08.476Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:09.307Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:10.128Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:10.905Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:11.580Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:12.253Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:13.002Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:13.671Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:14.389Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:15.164Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:15.900Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:16.657Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:17.379Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:18.065Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:18.824Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:19.528Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:20.202Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:20.891Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:21.550Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:22.213Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:22.897Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:23.646Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:24.341Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:25.061Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:25.872Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:26.574Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:27.324Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:28.096Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:28.837Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:29.503Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:30.208Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:30.920Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:31.601Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:32.355Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:33.017Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:33.674Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:34.329Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:34.986Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:35.655Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:36.323Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:37.024Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:37.739Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:38.446Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:39.141Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:39.823Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:40.503Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:41.212Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:41.902Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:42.607Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:43.297Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:43.955Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:44.614Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:45.327Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:45.988Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:46.618Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:47.302Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:47.996Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:48.739Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:49.399Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:50.041Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:50.716Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:51.367Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:52.010Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:52.696Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:53.308Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:53.930Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:54.562Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:55.235Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:55.874Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:56.513Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:57.182Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:57.841Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:58.516Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:59.182Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:19:59.842Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:00.495Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:01.165Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:01.832Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:02.574Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:03.234Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:03.911Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:04.600Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:05.256Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:05.893Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:06.639Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:07.306Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:08.028Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:08.812Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:09.500Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:10.213Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:10.869Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:11.620Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:12.353Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:13.049Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:14.018Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:14.770Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:15.490Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:16.216Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:16.967Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:17.676Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:18.461Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:19.188Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:19.842Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:20.568Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:21.220Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:21.887Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:22.607Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:23.272Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:23.938Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:24.626Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:25.314Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:26.049Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:26.719Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:27.385Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:28.198Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:28.851Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:29.486Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:30.107Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:30.790Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:31.426Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:32.112Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:32.783Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:33.403Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:34.032Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:34.719Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:35.348Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:35.980Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:36.651Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:37.291Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:37.920Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:38.574Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:39.307Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:40.028Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:40.759Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:41.477Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:42.167Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:42.839Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:43.472Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:44.095Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:44.747Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:45.391Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:46.036Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:46.722Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:47.460Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:48.153Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:48.839Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:49.491Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:50.211Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:50.863Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:20:51.619Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:22:54.808Z] ERROR: Error: [MetroCore] Failed to initialize database manager:
Stack: Error: [MetroCore] Failed to initialize database manager:
    at Object.error (/app/src/events/logger.js:152:27)
    at /app/src/core/metro/core/MetroCore.js:174:24
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": "Failed to connect to the database: Database connection timeout"
}

[2025-08-16T18:22:54.809Z] ERROR: Error: [SCHEDULER] ❌ Failed to initialize MetroCore or Database:
Stack: Error: [SCHEDULER] ❌ Failed to initialize MetroCore or Database:
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:42:16)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:22:55.682Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:22:56.693Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:22:57.706Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:22:58.884Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:22:59.958Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:23:00.933Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:23:01.764Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:23:02.647Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:23:03.486Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:23:04.253Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:23:05.078Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:23:05.807Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:23:06.588Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:23:07.414Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:23:08.327Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:24:53.949Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:152:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:24:53.976Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:24:54.609Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:26:53.705Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startDiscordBot (/app/src/discord-bot.js:22:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:26:53.781Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:26:54.502Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:26:55.329Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:26:55.951Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:26:56.588Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:26:57.235Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:26:57.901Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:26:58.574Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:26:59.235Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:26:59.888Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:00.552Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:01.217Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:01.883Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:02.513Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:03.149Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:03.812Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:04.465Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:05.218Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:06.037Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:06.706Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:07.485Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:08.443Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:09.512Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:10.499Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:11.509Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:12.585Z] ERROR: Error: [MetroCore] A critical error occurred during initialization:
Stack: Error: [MetroCore] A critical error occurred during initialization:
    at Object.error (/app/src/events/logger.js:160:27)
    at MetroCore.initialize (/app/src/core/metro/core/MetroCore.js:260:20)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async /app/src/core/metro/core/MetroCore.js:182:17
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}

[2025-08-16T18:27:45.415Z] ERROR: Error: [MetroCore] Failed to initialize database manager:
Stack: Error: [MetroCore] Failed to initialize database manager:
    at Object.error (/app/src/events/logger.js:152:27)
    at /app/src/core/metro/core/MetroCore.js:174:24
    at async initialize (/app/src/core/bootstrap.js:39:21)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": "Failed to connect to the database: Database connection timeout"
}

[2025-08-16T18:27:45.416Z] ERROR: Error: [SCHEDULER] ❌ Failed to initialize MetroCore or Database:
Stack: Error: [SCHEDULER] ❌ Failed to initialize MetroCore or Database:
    at Object.error (/app/src/events/logger.js:152:27)
    at initialize (/app/src/core/bootstrap.js:42:16)
    at async startScheduler (/app/src/scheduler.js:7:27)
Metadata: {
  "error": {}
}
[2025-08-17T17:51:01.132Z] ERROR: Error: [Master] Critical error during startup:
Stack: Error: [Master] Critical error during startup:
    at Object.error (/app/src/events/logger.js:160:27)
    at /app/src/index.js:153:12
Metadata: {}

[2025-08-17T17:52:46.540Z] ERROR: Error: [Master] Critical error during startup:
Stack: Error: [Master] Critical error during startup:
    at Object.error (/app/src/events/logger.js:160:27)
    at /app/src/index.js:153:12
Metadata: {}
